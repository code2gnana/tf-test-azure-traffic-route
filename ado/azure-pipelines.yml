trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  # Store these securely in Azure DevOps variable groups or secrets!
  AZURE_SUBSCRIPTION_ID: $(azureSubscriptionId)
  AZURE_CLIENT_ID: $(azureClientId)
  AZURE_CLIENT_SECRET: $(azureClientSecret)
  AZURE_TENANT_ID: $(azureTenantId)
  TF_VERSION: 'latest'

# - task: TerraformInstaller@1
#   inputs:
#     terraformVersion: 'latest'
#     - task: TerraformTask@5
#       inputs:
#         provider: 'azurerm'
#         command: 'init'
#         backendAzureRmUseEntraIdForAuthentication: false
#         backendServiceArm: 'arm'

stages:
  # Stage 1: Initialization (init, validate, lint)
  - stage: Initialization
    jobs:
      - job: TerraformInit
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          # Initialize Terraform
          - task: TerraformTaskV4@5
            inputs:
              provider: 'azurerm'
              backendServiceArm: 'arm'
              backendAzureRmUseEntraIdForAuthentication: false
              # backendAzureRmResourceGroupName: $(backendResourceGroup)
              # backendAzureRmStorageAccountName: $(backendStorageAccount)
              # backendAzureRmContainerName: $(backendContainer)
              # backendAzureRmKey: $(backendKey)
              command: 'init'  # Initialize Terraform
              # workingDirectory: 'terraform'  # Set the working directory
